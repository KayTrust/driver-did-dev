# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: PushApp 
    displayName: Push app
    jobs:
    - job: BuildImage
      displayName: Build image
      steps:
      - script: |
          echo ****Display****   
          ls -la
        workingDirectory: '$(Pipeline.Workspace)/s'
        displayName: 'Display  Workspace'

      - task: Docker@2 
        displayName: Build and push images Dev
        inputs:
          containerRegistry: 'Docker-Registry-Kaytrust'
          repository: '$(DOCKER_REPOSITORY)'
          command: 'buildAndPush'
          Dockerfile: 'Dockerfile'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish deployment.yml as an artifact'
        inputs:
          targetPath: '$(Pipeline.Workspace)/s/manifest/deployment.yml'
          artifact: 'manifest'
          artifactName: 'manifest'
          publishLocation: 'pipeline'
  
  - stage: DeployDev
    variables:
      TAG_ENV: dev-
      NAMESPACE: default
    displayName: Deploy Microservice to Dev environment
    jobs:
    - deployment: DeployDev
      displayName: Deploy to Kubernetes cluster DEV
      environment: 'EVR-ClusterKaytrust.default'
      strategy:        
        runOnce:
          deploy:
            steps:

            - task: DownloadPipelineArtifact@2
              inputs:
                artifact: manifest        
                path: $(Pipeline.Workspace)/s/manifest

            - script: 'ls -la'
              workingDirectory: '$(Pipeline.Workspace)/s'
              failOnStderr: true
              displayName: Display Workspace

            - script: |
                sed -i 's|{{TAG_ENV}}|'$TAG_ENV'|g; s|{{DOCKER_IMAGE_TAG}}|'$DOCKER_IMAGE_TAG'|g; s|{{NAMESPACE}}|'$NAMESPACE'|g' deployment.yml
                cat deployment.yml
              workingDirectory: '$(Pipeline.Workspace)/s/manifest'
              failOnStderr: true 
              displayName: 'Generate deployment file'

            - task: KubernetesManifest@0 
              displayName: Deploy to Dev Kubernetes cluster
              inputs:
                  action: deploy  
                  manifests: |
                     $(Pipeline.Workspace)/s/manifest/deployment.yml
